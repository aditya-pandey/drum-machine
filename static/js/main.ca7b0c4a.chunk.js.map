{"version":3,"sources":["DrumPad.js","DrumMachine.js","App.js","serviceWorker.js","index.js"],"names":["DrumPad","props","state","play","displayText","playSound","bind","event","this","setState","currentTime","document","querySelector","innerHTML","className","id","style","onClick","keyTrigger","ref","src","url","React","Component","bankOne","keyCode","bankTwo","DrumMachine","bank","changeBank","handleKeyDown","handleKeyUp","addEventListener","e","audios","querySelectorAll","i","length","toLowerCase","charCodeAt","sound","drumPad","boxShadow","drumpad","map","x","drumpadElement","key","color","type","name","value","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ca7b0c4a.chunk.js","sourcesContent":["import React from  \"react\";\r\n\r\nclass DrumPad extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        play: false,\r\n        displayText: \"\"\r\n      };\r\n      this.playSound = this.playSound.bind(this);\r\n    }\r\n    playSound(event) {\r\n      this.setState({\r\n        play: !this.state.play,\r\n        displayText: [event]\r\n      });\r\n      this[event].play();\r\n      this[event].currentTime = 0;\r\n      var check = document.querySelector(\"#display\");\r\n      check.innerHTML = [event];\r\n    }\r\n    render() {\r\n      return (\r\n        <div\r\n          className={this.props.className}\r\n          id={this.props.id}\r\n          style={this.state.style}\r\n          onClick={() => this.playSound(this.props.id)}\r\n        >\r\n          {this.props.keyTrigger}\r\n\r\n          <audio\r\n            ref={(ref) => (this[this.props.id] = ref)}\r\n            src={this.props.url}\r\n            className=\"clip\"\r\n            id={this.props.keyTrigger}\r\n          ></audio>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default DrumPad","import React from \"react\";\r\nimport DrumPad from \"./DrumPad\";\r\n\r\nconst bankOne = [\r\n  {\r\n    keyCode: 81,\r\n    keyTrigger: \"Q\",\r\n    id: \"Heater-1\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\r\n  },\r\n  {\r\n    keyCode: 87,\r\n    keyTrigger: \"W\",\r\n    id: \"Heater-2\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\r\n  },\r\n  {\r\n    keyCode: 69,\r\n    keyTrigger: \"E\",\r\n    id: \"Heater-3\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\r\n  },\r\n  {\r\n    keyCode: 65,\r\n    keyTrigger: \"A\",\r\n    id: \"Heater-4\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\r\n  },\r\n  {\r\n    keyCode: 83,\r\n    keyTrigger: \"S\",\r\n    id: \"Clap\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\r\n  },\r\n  {\r\n    keyCode: 68,\r\n    keyTrigger: \"D\",\r\n    id: \"Open-HH\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\r\n  },\r\n  {\r\n    keyCode: 90,\r\n    keyTrigger: \"Z\",\r\n    id: \"Kick-n'-Hat\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\r\n  },\r\n  {\r\n    keyCode: 88,\r\n    keyTrigger: \"X\",\r\n    id: \"Kick\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\r\n  },\r\n  {\r\n    keyCode: 67,\r\n    keyTrigger: \"C\",\r\n    id: \"Closed-HH\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\",\r\n  },\r\n];\r\n\r\nconst bankTwo = [\r\n  {\r\n    keyCode: 81,\r\n    keyTrigger: \"Q\",\r\n    id: \"Chord-1\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\",\r\n  },\r\n  {\r\n    keyCode: 87,\r\n    keyTrigger: \"W\",\r\n    id: \"Chord-2\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\",\r\n  },\r\n  {\r\n    keyCode: 69,\r\n    keyTrigger: \"E\",\r\n    id: \"Chord-3\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\",\r\n  },\r\n  {\r\n    keyCode: 65,\r\n    keyTrigger: \"A\",\r\n    id: \"Shaker\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\",\r\n  },\r\n  {\r\n    keyCode: 83,\r\n    keyTrigger: \"S\",\r\n    id: \"Open-HH\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\",\r\n  },\r\n  {\r\n    keyCode: 68,\r\n    keyTrigger: \"D\",\r\n    id: \"Closed-HH\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\",\r\n  },\r\n  {\r\n    keyCode: 90,\r\n    keyTrigger: \"Z\",\r\n    id: \"Punchy-Kick\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\",\r\n  },\r\n  {\r\n    keyCode: 88,\r\n    keyTrigger: \"X\",\r\n    id: \"Side-Stick\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\",\r\n  },\r\n  {\r\n    keyCode: 67,\r\n    keyTrigger: \"C\",\r\n    id: \"Snare\",\r\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\",\r\n  },\r\n];\r\nclass DrumMachine extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bank: bankOne,\r\n      displayText: \"Sound\",\r\n    };\r\n    this.changeBank = this.changeBank.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleKeyUp = this.handleKeyUp.bind(this);\r\n  }\r\n  changeBank() {\r\n    if (this.state.bank === bankOne) {\r\n      this.setState({\r\n        bank: bankTwo,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        bank: bankOne,\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n    document.addEventListener(\"keyup\", this.handleKeyUp);\r\n  }\r\n  handleKeyDown(e) {\r\n    var audios = document.querySelectorAll(\"audio\");\r\n    for (let i = 0; i < this.state.bank.length; i++) {\r\n      if (\r\n        e.keyCode === this.state.bank[i].keyCode ||\r\n        e.keyCode === this.state.bank[i].keyTrigger.toLowerCase().charCodeAt()\r\n      ) {\r\n        var sound = audios[i];\r\n        var drumPad = document.querySelectorAll(\".drum-pad\");\r\n        sound.play();\r\n        sound.currentTime = 0;\r\n        this.setState({ displayText: this.state.bank[i].id });\r\n        drumPad[i].style.boxShadow = \"unset\";\r\n      }\r\n    }\r\n  }\r\n  handleKeyUp(e) {\r\n    for (let i = 0; i < this.state.bank.length; i++) {\r\n      if (\r\n        e.keyCode === this.state.bank[i].keyCode ||\r\n        e.keyCode === this.state.bank[i].keyTrigger.toLowerCase().charCodeAt()\r\n      ) {\r\n        var drumPad = document.querySelectorAll(\".drum-pad\");\r\n        drumPad[i].style.boxShadow = \"0 10px 20px #f9ff21\";\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    let drumpad = this.state.bank.map((x) => {\r\n      return (\r\n        <DrumPad\r\n          keyTrigger={x.keyTrigger}\r\n          id={x.id}\r\n          url={x.url}\r\n          ref={this.drumpadElement}\r\n          className=\"drum-pad\"\r\n          key={x.id}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>\r\n          The <b style={{ color: \"#ff5959\" }}>D</b>\r\n          <b style={{ color: \"#facf5a\" }}>R</b>\r\n          <b style={{ color: \"#49beb7\" }}>U</b>\r\n          <b style={{ color: \"#f9ff21\" }}>M</b> Machine\r\n        </h1>\r\n        <div id=\"drum-machine\">{drumpad}</div>\r\n        <div className=\"other\">\r\n          <label className=\"label\">\r\n            <div className=\"toggle\">\r\n              <input\r\n                className=\"toggle-state\"\r\n                type=\"checkbox\"\r\n                name=\"check\"\r\n                value=\"check\"\r\n                onClick={this.changeBank}\r\n              />\r\n              <div className=\"indicator\"></div>\r\n            </div>\r\n            Change Music Bank\r\n          </label>\r\n          <div id=\"display\">{this.state.displayText}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DrumMachine;\r\n","import React from 'react';\nimport './App.css';\nimport DrumMachine from \"./DrumMachine\"\n\nfunction App() {\n  return (\n    <DrumMachine />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}